---@meta

--- Gets the name of the target.
---
--- The name of the target is derived from the filename of the entry script without the extension.
--- @type string
target = nil

--- Gets or sets the directory where output files are generated for the build.
---
--- If the directory is not set, ./artifacts is used.
--- @type string
artf_dir = nil

--- Gets or sets the name of the compiler executable to invoke to compile source files.
---
--- If the name is not set, a default for the given toolchain will be used.
--- @type string
cc_exe = nil

--- Gets or sets the name of the linker executable to invoke to link all of the compiled object
--- files.
---
--- If the name is not set, a default for the given toolchain will be used.
--- @type string
ld_exe = nil

--- Gets or sets the filepath of the linker script to pass to the linker.
---
--- If the filepath is not set, no linker script is passed to the linker.
--- @type string
ld_scr = nil

--- Gets or sets the name of the executable generated by the build.
---
--- If the name of the executable is not set, the name will be 'target'.
--- @type string
ld_out = nil

--- Gets or sets the name of the linker map file generated by the build.
---
--- If the name of the map file is not set, no linker map file will be generated.
--- @type string
ld_map = nil

--- Gets or sets the intellisense mode to set within the c_cpp_properties.json file for the target
--- @type string
vsc_imode = nil

--- Gets or sets the toolchain for the target.
---
--- If the toolchain is not set or does not represent a valid toolchain, clang will be used.
--- @type "clang"
toolc = nil

--- Gets or sets the directory where the toolchain binaries are located.
---
--- If the directory is not set, the directory is expected to be on the user's path and the
--- executables are invoked directly. Otherwise, this path is combined with the name of the
--- executable.
--- @type string
toolc_dir = nil

--- Gets or sets the current source directory
---
--- This can be used in conjunction with the source command functions to change the current source
--- directory.
--- @type string
src_dir = nil

--- Gets or sets the c standard used for the project
--- @type integer
c_std = nil

--- Gets or sets a value that indicates if listing files should be generated for each compiled
--- source file
--- @type boolean
cc_lst = nil

--- Adds compiler options to the target.
---
--- Function execution is skipped for the run command.
---@param ... string The options to add
function cc_opts(...) end

--- Adds compiler include paths to the target
---
--- Function execution is skipped for the run command
--- @param ... string The include paths to add
function cc_incs(...) end

--- Adds compiler defines to the target
---
--- Function execution is skipped for the run command
--- @param ... string The defines to add
function cc_defs(...) end

--- Adds linker options to the target
--- Function execution is skipped for the run, configure, and compile commands
--- @param ... string The options to add
function ld_opts(...) end

--- Adds linker libraries to the target
---
--- Function execution is skipped for the run, configure, and compile commands
--- @param ... string The libraries to add
function ld_libs(...) end

--- Adds linker object files to the target
---
--- Function execution is skipped for the run, configure, and compile commands
--- @param ... string The object files to add
function ld_objs(...) end

--- Adds additional definitions to the c_cpp_properties.json file for the target besides those added
--- through the cc_defs command.
---
--- Function execution is skipped for all commands except configure
--- @param ... string The definitions to add
function vsc_defs(...) end

--- Sets the current source directory and includes source files contained within a directory
--- in the build
---
--- Function execution is only enabled for build commands.
--- @param dir string The directory containing the sources to include in the build
function src_di(dir) end

--- Sets the current source directory and excludes source files contained within a directory
--- from the build
---
--- Function execution is only enabled for build commands.
--- @param dir string The directory containing the sources to exclude from the build
function src_rde(dir) end

--- Sets the current source directory and recursively includes source files contained within a
--- directory and its children in the build
---
--- Function execution is only enabled for build commands.
--- @param dir string The directory containing the sources to include in the build
function src_rdi(dir) end

--- Sets the current source directory and recursively excludes source files contained within a
--- directory and its children from the build
---
--- Function execution is only enabled for build commands.
--- @param dir string The directory containing the sources to exclude from the build
function src_rde(dir) end

--- Includes a set of source files within the current source directory in the build
---
--- Function execution is only enabled for build commands.
--- @param ... string The filenames of the source files to include in the build
function src_fi(...) end

--- Excludes a set of source files within the current source directory from the build
---
--- Function execution is only enabled for build commands.
--- @param ... string The filenames of the source files to exclude from the build
function src_fe(...) end